Sum of Lengths of Non-Overlapping SubArrays
EasyAccuracy: 51.28%Submissions: 1694Points: 2
Given an array arr[] of N elements, the task is to find the maximum sum of lengths of all non-overlapping subarrays with K as the maximum element in the subarray.

Example 1:

Input: N = 9, K = 4
arr[] = {2, 1, 4, 9, 2, 3, 8, 3, 4} 
Output: 5
Explanation: {2, 1, 4} => Length = 3
             {3, 4} => Length = 2
             So, 3 + 2 = 5 is the answer.
             
             
             
 traverse the array if elements are smaller than k the increase count and if equals to k then set flag to 1
 and if any element greater than k is found then ignore it till we not find a smaller element less than k and again when we found a smaller element then 
 again increase our count from 0 each count value is added to final value if flag is 1
 
             
             
             
 
 
 
 
 int calculateMaxSumLength(int arr[], int n, int k)
	{
		// Your code goes here
		int ans=0;
		for(int i=0;i<n;){
		    
		    int count=0;
		    int flag=0;
		    
		    
		    while(arr[i]<=k && i<n){
		        count++;
		        if(arr[i]==k){
		            flag=1;
		        }
		        i++;
		    }
		    if(flag==1){
		        ans+=count;
		        
		    }
		    
		    while(arr[i]>k && i<n){
		        i++;
		    }
		}
		return ans;
	}
  
  
  
  Expected Time Complexity: O(N). 
Expected Auxiliary Space: O(1).
