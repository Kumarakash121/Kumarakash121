Game of XOR
EasyAccuracy: 61.22%Submissions: 3044Points: 2
Given an array A[] of size N. The value of an array is denoted by the bit-wise XOR of all elements it contains. Find the bit-wise XOR of the values of all subarrays of
A[].

Example 1:

Input: N = 3, A[] = {1,2,3} 
Output: 2
Explanation:
xor[1] = 1, 
xor[1, 2] = 3
xor[2, 3] = 1
xor[1, 2, 3] = 0
xor[2] = 2
xor[3] = 3
Result : 1 ^ 3 ^ 1 ^ 0 ^ 2 ^ 3 = 2




if we xor all subarrays then if total contribution of a element  in all subarray is odd then this element xored with final ans and if even then this element nullify
so toatal contribution of a element in all subarrays is (i+1)*(n-i);
for ex-
contribution of 1
in [3 ,1,4,5]

1
1 4 
1 4 5 
3 1 
3 1 4 
3 1 4 5
=2*3=6



int ans=0;
  int curr=0;
    int gameOfXor(int N , int A[]) {
        // code here
      
        int ans=0;
        for(int i=0;i<N;i++){
            int curr=(i+1)*(N-i);
            if(curr%2){
                ans^=(A[i]);
            }
        }
        return ans;
    }
    
    T C-O(N)
    S.C-O(1)
    
    
    
    II-
    IF n is even the ans is 0 always
    if n is odd then ans is xor of all element at even index
    
    
    
    
    int ans=0;
  int curr=0;
    int gameOfXor(int N , int A[]) {
        // code here
      
        int ans=0;
        if(N%2==0){
            return 0;
        }
        for(int i=0;i<N;i++){
          
            if(i%2==0){
                ans^=(A[i]);
            }
        }
        return ans;
    }
