Search an element in sorted and rotated array
EasyAccuracy: 50.0%Submissions: 32138Points: 2
Given a sorted and rotated array A of N distinct elements which are rotated at some point, and given an element K. The task is to find the index of the given element K in array A.

Example 1:

Input:
N = 9
A[] = {5,6,7,8,9,10,1,2,3}
K = 10
Output: 5
Explanation: 10 is found at index 5.



approach-

if mid is equal to k then return mid and else if l is less than mid then l-mid is sorted and if K is greater than l and less than mid then h=mid-1 else l=mid+1 else if l
is not less than mid then if K>=mid and K<=h then l=mid+1 else h=mid-1 and if l>h then return -1 else return l element;


int Search(vector<int> vec, int K) {
    //code here
    
    int l=0;
    int h=vec.size()-1;
    while(l<=h){
        
        int mid=(l+h)/2;
        if(vec[mid]==K){
            return mid;
        }
       else if(vec[l]<=vec[mid]){
            if(K>=vec[l] && K<=vec[mid]){
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        else{
            if(K>=vec[mid] && K<=vec[h]){
                l=mid+1;
            }
            else{
                h=mid-1;
            }
        }
    }
    if(l>h){
        return -1;
    }
    return l;
   
}


Expected Time Complexity: O(log N).
Expected Auxiliary Space: O(1).
