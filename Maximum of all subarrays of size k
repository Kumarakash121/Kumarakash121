vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        
        int i=0;
        int j=0;
        list<int>l;
        vector<int>ans;
        while(j<n){
            
            while( l.size()>0 && l.back()<arr[j]){
                l.pop_back();
                
            }
            l.push_back(arr[j]);
            
            
            if(j-i+1<k){
                j++;
            }
            else if(j-i+1==k){
                ans.push_back(l.front());
                if(arr[i]==l.front()){
                    l.pop_front();
                }
                i++;
                j++;
            }
        }
        return ans;
    }
    
    
    Expected Time Complexity: O(N)
Expected Auxiliary Space: O(k)
