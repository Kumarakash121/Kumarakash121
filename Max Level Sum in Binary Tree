Max Level Sum in Binary Tree
EasyAccuracy: 52.58%Submissions: 29024Points: 2
Given a Binary Tree having positive and negative nodes. Find the maximum sum of a level in the given Binary Tree.

Example 1:

Input :               
             4
          /    \
         2     -5
        / \    / \
      -1   3  -2  6

Output: 6


do level order traversal if at any level sum is greater than max then update max and if sum is 0 at any level means it is beyond last levl nodes at that level then
do not update max


int maxLevelSum(Node* root) {
        // Your code here
        queue<Node*>q;
        
        q.push(root);
        int ma=root->data;
        
        while(!q.empty()){
            
            int size=q.size();
            int sum=0;
            while(size--){
                Node* t =q.front();
                q.pop();
                if(t->left){
                    q.push(t->left);
                    sum+=t->left->data;
                }
                if(t->right){
                     q.push(t->right);
                    sum+=t->right->data;
                }
            }
            // cout<<ma<<" "<<sum<<endl;
            if(sum!=0){
                ma=max(ma,sum);
            }
            // ma=max(ma,sum);
            // cout<<ma<<" "<<sum<<endl;
            
        }
        return ma;
        
        
    }
    
    
    
Expected Time Complexity: O(N)
Expected Auxiliary Space: O(N)
