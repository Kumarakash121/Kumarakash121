Add two numbers represented by linked lists
EasyAccuracy: 30.12%Submissions: 100k+Points: 2
LampGeek Week 2022 is LIVE! Click Here to View All the Exciting Offers!
Given two decimal numbers represented by two linked lists of size N and M respectively. The task is to return a linked list that represents the sum of these two numbers.

For example, the number 190 will be represented by the linked list, 1->9->0->null, similarly 25 by 2->5->null. Sum of these two numbers is 190 + 25 = 215, which will be represented by 2->1->5->null. You are required to return the head of the linked list 2->1->5->null.

Example 1:

Input:
N = 2
valueN[] = {4,5}
M = 3
valueM[] = {3,4,5}
Output: 3 9 0  
Explanation: For the given two linked
list (4 5) and (3 4 5), after adding
the two linked list resultant linked
list will be (3 9 0).


reverse both ll and traverse both ll while p or q or carry 


 Node* reverse(Node* head){
        
        Node* curr=head;
        Node*next;
        Node* prev=NULL;
        
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
            
        }
        return prev;
    }
    struct Node* addTwoLists(struct Node* first, struct Node* second)
    {
        // code here
        Node*p=reverse(first);
        Node*q=reverse(second);
        int carry=0;
        Node* temp=new Node(-1);
        int sum=0;
        Node* head=temp;
        while(p || q || carry){
            sum=0;
             sum+=(p?p->data:0);
             sum+=(q?q->data:0);
            sum+=carry;
            int ans=sum%10;
            carry=sum/10;
            Node* x=new Node(ans);
             temp->next=x;
              temp=temp->next;
            // break;
            p=p?p->next:NULL;
            q=q?q->next:NULL;
        }
        
         Node* t=reverse(head->next);
        return t;
        // return p;
    }
    
    
    Expected Time Complexity: O(N+M)
Expected Auxiliary Space: O(Max(N,M)) for the resultant list.
