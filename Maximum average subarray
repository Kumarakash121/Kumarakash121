Maximum average subarray
EasyAccuracy: 45.64%Submissions: 9200Points: 2
Given an array Arr of size N and a positive integer K, find the sub-array of length K with the maximum average.


Example 1:

Input:
K = 4, N = 6
Arr[] = {1, 12, -5, -6, 50, 3}
Output: 12 -5 -6 50
Explanation: Maximum average is 
(12 - 5 - 6 + 50)/4 = 51/4.





I
find every subarray of size k and find maximum sum subarray among them

II-
using sliding window first find sum of first window and find remainining window sum by one adding and one subtracted and find maximum sum window among them


int findMaxAverage(int arr[], int n, int k) {
        // code here
        int i=0;
        int sum=0;
        for(;i<k;i++){
            sum+=arr[i];
        }
        int max=sum;
        int start=0;
        int end=i-1;
        int j=0;
        // cout<<max<<" "<<i<<endl;
        while(i<n){
            sum=sum-arr[j]+arr[i];
            //  cout<<sum<<" "<<j<<endl;
            if(sum>max){
                // cout<<j<<endl;
                max=sum;
                start=j+1;
                end=i;
                
            }
            i++;
            j++;
        }
        // cout<<start<<endl;
        
        return start;
    }
    
    
    TC-O(N)
    
    SC=O(1)
