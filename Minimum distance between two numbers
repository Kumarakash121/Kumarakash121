 int minDist(int a[], int n, int x, int y) {
        // code here
         long long int min1=INT_MAX;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if((a[j]==x && a[i]==y || a[i]==x && a[j]==y) && abs(j-i)<min1 ){
                     min1=abs(j-i);
                }
            }
        }
        if(min1==INT_MAX){
            return -1;
        }
        return min1;
        

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(1)


int minDist(int a[], int n, int x, int y) {
        // code here
         long long int min1=INT_MAX;
       
        
        int i=0;
        int prev;
        
        for( i=0;i<n;i++){
            
            if(a[i]==x || a[i]==y){
                prev=i;
                break;
            }
    }
    
    for(;i<n;i++){
        
        if(a[i]==x || a[i]==y){
            
            if(a[prev]!=a[i] && i-prev<min1){
                min1=i-prev;
                
            }
            
            prev=i;
        }
    }
    if(min1==INT_MAX){
            return -1;
        }
        return min1;
    // return min1;
    }
    
    
Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)
