



Even and odd elements at even and odd positions
EasyAccuracy: 43.63%Submissions: 1162Points: 2
Given an array arr[] of size N,the task is to arrange the array such that odd elements occupy the odd positions and even elements occupy the even positions.
The order of elements must remain the same. Consider zero-based indexing. After printing according to conditions, if remaining, print the remaining elements 
as it is.

Example 1:

Input: N = 6
arr[] = {1, 2, 3, 4, 5, 6}
Output: 2 1 4 3 6 5
Explanation: Even elements are at 
even position and odd elements are 
at odd position keeping the order 
maintained.




First  put even elements in a vector
then put odd elements in other vector
and then put one by one fsirst even and then odd in new vector
return this vector as a result
vector<int> arrangeOddAndEven(int a[], int n) 
	{ 
	    // Your code goes here
	     vector<int> b;
  vector<int> c;
  vector<int> d;
  
  
  for(int i=0;i<n;i++){
      if(a[i]%2==0){
          b.push_back(a[i]);
      }
      else if(a[i]%2!=0){
          c.push_back(a[i]);
      }
  }
 int i=0,j=0;
 while(i<n){
    if(i<b.size()){
        d.push_back(b[i]);
    } 
    if(j<c.size()){
        d.push_back(c[j]);
    }
    i++;
    j++;
 }
 
  
  
     return d;
	}
  
  
  Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

 
