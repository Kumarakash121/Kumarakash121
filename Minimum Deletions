Minimum Deletions
EasyAccuracy: 63.99%Submissions: 9948Points: 2
Given a string of S as input. Your task is to write a program to remove or delete the minimum number of characters from the string so that the resultant string is a palindrome.
Note: The order of characters in the string should be maintained.

Example 1:

Input: S = "aebcbda"
Output: 2
Explanation: Remove characters 'e' 
and 'd'.


find lcs of original string and reverse string and return trhe difference of lcs and original string


int minimumNumberOfDeletions(string S) { 
        // code here
        string rev=S;
        reverse(S.begin(),S.end());
        int n=S.size();
        int dp[n+1][n+1];
        for(int i=0;i<=S.size();i++){
            for(int j=0;j<=S.size();j++){
                if(i==0 || j==0){
                    dp[i][j]=0;
                }
            }
        }
        for(int i=1;i<=S.size();i++){
            for(int j=1;j<=S.size();j++){
                if(S[i-1]==rev[j-1]){
                    dp[i][j]=1+dp[i-1][j-1];
                }
                else{
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return S.size()-dp[n][n];
    } 
    
    
    Expected Time Complexity: O(|S|2)
Expected Auxiliary Space: O(|S|2)
